PolicySet Streaming_Policy { deny-unless-permit
  policies:

  PolicySet LoginPREMIUM_Policy { deny-unless-permit
    target:equal ( name / id, "Alice") && equal ( action/id, "login")
    policies:
      Rule loginAlice( permit target:
          equal ( status / passwordAlice, password/id)
        )
    obl:
    [ permit M SetString(loginAlice, "PREMIUM") ],
    [ permit M flagStatus(streamingAlice, true) ]
  }

  PolicySet ListenPREMIUM_Policy { deny-unless-permit
    target:equal ( name / id, "Alice") && equal ( action/id, "listen")
    policies:
      Rule listenAlice( permit target:
          equal ( status / loginAlice, "PREMIUM")
        )
    obl:
    [ permit M equal(name/id, "Alice"), equal(status/streamingAlice, true)]
  }

  PolicySet LoginSTANDARD_Policy { deny-unless-permit
    target:equal ( name / id, "Bob") && equal ( action/id, "login")
    policies:
      Rule loginBob( permit target:
          equal ( status / passwordBob, password/id)
        )
    obl:
    [ permit M SetString(loginBob, "STANDARD") ],
    [ permit M flagStatus(streamingBob, true) ]
  }

  PolicySet ListenSTANDARD_Policy { deny-unless-permit
    target:equal ( name / id, "Bob") && equal ( action/id, "listen")
    policies:
      Rule listenBob( permit target:
          equal ( status / loginBob, "STANDARD") &&
          equal ( status / commercialsBob, false)
        )
    obl:
    [ permit M equal(name/id, "Bob"), equal(status/streamingBob, true),"00:15:00"],
    [ permit M flagStatus(commercialsBob, true) ]
  }

  PolicySet commercials_Policy { deny-unless-permit
    target:equal ( name / id, "Bob") && equal ( action/id, "listenCommercials")
    policies:
      Rule listenBob( permit target:
          equal ( status / loginBob, "STANDARD") &&
          equal ( status / commercialsBob, true)
        )
    obl:
    [ permit M flagStatus(commercialsBob, false) ]
  }
}
PAS {
  Combined Decision : false ;
  Extended Indeterminate : false ;
  Java Package : "exampleStreaming" ;
  Requests To Evaluate : Request1, Request2, Request3, Request4, Request5, Request6 , Request7, Request8, Request9, Request10
  pep: deny-biased
  pdp: deny-unless-permit
  status: [ (string loginBob = "NOLOGIN"),
            (string loginAlice = "NOLOGIN"),
            (string passwordBob = "abcdef"),
            (string passwordAlice = "123456"),
            (boolean streamingBob = false),
            (boolean streamingAlice = false),
            (boolean commercialsBob = false) ]
  include exampleStreaming
}
